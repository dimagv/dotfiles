set guioptions-=T

"color scheakur
set background=dark
"set guifont=Monaco:h11.00
set wildmenu
color solarized
let g:solarized_termcolors=256
function! InsertStatuslineColor(mode)
  if a:mode == 'i'
    hi statusline guibg=magenta
  elseif a:mode == 'r'
    hi statusline guibg=blue
  else
    hi statusline guibg=red
  endif
endfunction

au InsertEnter * call InsertStatuslineColor(v:insertmode)
au InsertLeave * hi statusline guibg=green

" default the statusline to green when entering Vim
hi statusline guibg=green

" strip trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

if has("gui_macvim") && has("gui_running")
  " Command-Shift-F on OSX
  nmap <D-S-F> :Ack<space>
endif

nnoremap <silent> <leader>T :ClearCtrlPCache<cr>\|:CtrlP<cr>

nmap <F8> :TagbarToggle<CR>

let g:neocomplete#enable_at_startup = 1
autocmd VimEnter * NeoCompleteEnable

let NERDTreeShowHidden=1
let g:ctrlp_show_hidden = 1
let g:ctrlp_dont_split = 'NERD'
let g:syntastic_auto_jump = 0

let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_rails = 1
let g:rubycomplete_classes_in_global = 1

function s:MkNonExDir(file, buf)
    if empty(getbufvar(a:buf, '&buftype')) && a:file!~#'\v^\w+\:\/'
        let dir=fnamemodify(a:file, ':h')
        if !isdirectory(dir)
            call mkdir(dir, 'p')
        endif
    endif
endfunction
augroup BWCCreateDir
    autocmd!
    autocmd BufWritePre * :call s:MkNonExDir(expand('<afile>'), +expand('<abuf>'))
augroup END

" RSpec.vim mappings
"let g:rspec_command = 'call Send_to_Tmux("rspec {spec}\n")'
let g:rspec_command = "Dispatch rspec {spec}"
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

set pastetoggle=<F2>
filetype indent off
